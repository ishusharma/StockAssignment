{"version":3,"sources":["states/StockState/StockList.ts","components/Report.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["stocksAtom","atom","key","default","stocksSelector","selector","get","stocks","volume","open","close","high","low","forEach","stock","push","title","text","xAxis","categories","series","name","data","Report","useRecoilState","setStocks","useRecoilValue","useState","searchSymbol","setSearchSymbol","className","type","placeholder","value","onChange","e","target","onClick","param","toUpperCase","axios","then","response","console","log","result","length","highcharts","Highcharts","options","App","href","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qRAIMA,EAAaC,YAAK,CACpBC,IAAK,SACLC,QAAS,KAGPC,EAAiBC,YAAS,CAC5BH,IAAK,cACLI,IAAK,YAAc,IACTC,GAASD,EADD,EAAVA,KACeN,GAEfQ,EAAmB,GACnBC,EAAiB,GACjBC,EAAkB,GAClBC,EAAiB,GACjBC,EAAgB,GAWpB,OATAL,EAAOM,SAAQ,SAAAC,GACXN,EAAOO,KAAKD,EAAMN,QAClBC,EAAKM,KAAKD,EAAML,MAChBC,EAAMK,KAAKD,EAAMJ,OACjBC,EAAKI,KAAKD,EAAMH,MAChBC,EAAIG,KAAKD,EAAMF,IAElB,IAEM,CACHI,MAAO,CACHC,KAAM,sBAEVC,MAAO,CACHC,WAAYX,GAEhBY,OAAQ,CAAC,CACLC,KAAM,OACNC,KAAMb,GACP,CACCY,KAAM,MACNC,KAAMV,GACP,CACCS,KAAM,OACNC,KAAMX,GAEV,CACIU,KAAM,QACNC,KAAMZ,IAKjB,I,wBCwBUa,EArEU,WACrB,MAAsBC,YAAexB,GAA5ByB,EAAT,oBACMlB,EAASmB,YAAetB,GAC9B,EAAwCuB,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAmCA,OACI,qCACJ,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,mBAAf,UACE,uBACEC,KAAK,OACLD,UAAU,eACVE,YAAY,mBACZC,MAAOL,EACPM,SAnBqB,SAACC,GAC1B,IAAMP,EAAeO,EAAEC,OAAOH,MAC9BJ,EAAgBD,EACjB,IAkBG,qBAAKE,UAAU,qBAAf,SACE,wBACEA,UAAU,4BACVC,KAAK,SACLM,QApBa,WA5BP,IAACC,GACbA,GADaA,EA6BLV,GA5BIW,gBAGZC,IAAMlC,IAAI,yFAAyFgC,GAC9FG,MAAK,SAACC,GACH,GAAIA,EAAU,CACVC,QAAQC,IAAIF,EAASpB,MACrB,IAAMuB,EAASH,EAASpB,KACpBuB,EAAOvB,MAAQuB,EAAOvB,KAAKwB,QAC3BrB,EAAUoB,EAAOvB,KAKxB,CACJ,GAcN,EAeK,2BAUA,qBAAKQ,UAAU,WAAf,SACI,qBAAKA,UAAU,MAAf,SACI,cAAC,IAAD,CAAiBiB,WAAYC,IAAYC,QAAS1C,UAKrE,ECtCc2C,EAhCO,WACpB,OACE,gCACE,sBAAKpB,UAAU,2CAAf,UACE,mBAAGqB,KAAK,aAAarB,UAAU,eAA/B,mBAGA,qBAAKA,UAAU,0BAcjB,qBAAKA,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,aAM3C,ECrBcC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,ECJDO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BX,G","file":"static/js/main.db59b4e6.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { atom, selector } from \"recoil\";\r\nimport { Datum } from \"../../models/Stock\";\r\n\r\nconst stocksAtom = atom({\r\n    key: 'stocks',\r\n    default: [] as Datum[]\r\n});\r\n\r\nconst stocksSelector = selector({\r\n    key: 'stocksChart',\r\n    get: ({ get }) => {\r\n        const stocks = get(stocksAtom);\r\n\r\n        let volume: number[] = [];\r\n        let open: number[] = [];\r\n        let close: number[] = [];\r\n        let high: number[] = [];\r\n        let low: number[] = [];\r\n\r\n        stocks.forEach(stock => {\r\n            volume.push(stock.volume);\r\n            open.push(stock.open);\r\n            close.push(stock.close);\r\n            high.push(stock.high);\r\n            low.push(stock.low);\r\n\r\n        });\r\n\r\n        return {\r\n            title: {\r\n                text: 'Display Stock Data'\r\n            },\r\n            xAxis: {\r\n                categories: volume,\r\n            },\r\n            series: [{\r\n                name: 'open',\r\n                data: open,\r\n            }, {\r\n                name: 'low',\r\n                data: low\r\n            }, {\r\n                name: 'high',\r\n                data: high\r\n            },\r\n            {\r\n                name: 'close',\r\n                data: close\r\n            }],\r\n           \r\n        }\r\n\r\n    }\r\n});\r\n\r\n\r\n\r\nexport { stocksAtom, stocksSelector };","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { Datum } from '../models/Stock';\r\nimport Highcharts from 'highcharts/highstock';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { stocksAtom, stocksSelector } from \"../states/StockState/StockList\";\r\nimport axios from \"axios\";\r\n\r\nconst Report: React.FC = () => {\r\n    const [, setStocks] = useRecoilState(stocksAtom);\r\n    const stocks = useRecoilValue(stocksSelector);\r\n    const [searchSymbol, setSearchSymbol] = useState('');\r\n   \r\n    const getData = (param: string) => {\r\n        param=param.toUpperCase();\r\n        if(param)\r\n        {\r\n        axios.get('http://api.marketstack.com/v1/eod?access_key=3dc53bdf0a3a0a47b62270dae3b28b5b&symbols='+param)\r\n            .then((response) => {\r\n                if (response) {\r\n                    console.log(response.data);\r\n                    const result = response.data;\r\n                    if (result.data && result.data.length) {\r\n                        setStocks(result.data as Datum[]);\r\n                    }\r\n                    else{\r\n                        <div>No Data Found</div>\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else{\r\n            <div>No Data Found</div>\r\n        }\r\n    }\r\n\r\n    const onChangeSearchSymbol = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const searchSymbol = e.target.value;\r\n        setSearchSymbol(searchSymbol);       \r\n      };\r\n\r\n      const findBySymbol = () => {\r\n        getData(searchSymbol);          \r\n      };\r\n      \r\n\r\n    return (\r\n        <>\r\n    <div className=\"col-md-8\">\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by symbol\"\r\n            value={searchSymbol}\r\n            onChange={onChangeSearchSymbol}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findBySymbol}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n            <div className=\"list row\">                \r\n                <div className='App'>\r\n                    <HighchartsReact highcharts={Highcharts} options={stocks} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Report;\r\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Report from \"./components/Report\";\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/tutorials\" className=\"navbar-brand\">\n          Stock\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          {/* <li className=\"nav-item\">\n            <Link to={\"/tutorials\"} className=\"nav-link\">\n              Tutorials\n            </Link>\n          </li> */}\n          {/* <li className=\"nav-item\">\n            <Link to={\"/add\"} className=\"nav-link\">\n              Add\n            </Link>\n          </li> */}\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Routes>\n          <Route path=\"/\" element={<Report/>} />\n          <Route path=\"/tutorials\" element={<Report/>} />          \n          {/* <Route path=\"/tutorials/:id\" element={<Tutorial/>} /> */}\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RecoilRoot } from 'recoil';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}